<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0
        http://karaf.apache.org/xmlns/shell/v1.1.0 http://karaf.apache.org/xmlns/shell/v1.1.0">

	<service auto-export="interfaces">
		<bean class="org.ops4j.pax.web.extender.whiteboard.runtime.DefaultResourceMapping">
			<property name="alias" value="/static/js/org.soluvas.web.login"/>
			<property name="path" value="/js"/>
		</bean>
	</service>

	<service auto-export="interfaces">
		<bean class="org.soluvas.web.site.JavaScriptModuleImpl">
			<argument value="org.soluvas.web.login"/>
			<argument value="org.soluvas.web.login"/>
			<argument value="org.soluvas.web.login"/>
		</bean>
	</service>

	<command-bundle xmlns="http://karaf.apache.org/xmlns/shell/v1.1.0">
	</command-bundle>

	<reference id="ldapPool" interface="org.apache.commons.pool.ObjectPool"
		filter="(&amp;(tenantId=berbatik)(tenantEnv=dev)(namespace=ldap))"/>
	<reference id="ldapConfigSupplier" interface="com.google.common.base.Supplier"
		filter="(suppliedClass=org.apache.directory.ldap.client.api.LdapConnectionConfig)" />
	<reference id="securityCatalogSupplier" interface="com.google.common.base.Supplier"
		filter="(&amp;(tenantId=berbatik)(tenantEnv=dev)(suppliedClass=org.soluvas.security.SecurityCatalog))" />

	<bean id="rolePersonAssoc" class="org.soluvas.ldap.LdapRolePersonAssoc">
		<argument ref="ldapPool" />
		<argument value="dc=dev,dc=berbatik,dc=com" />
	</bean>
	<service ref="rolePersonAssoc" auto-export="interfaces">
		<service-properties>
			<entry key="clientId" value="berbatik" />
			<entry key="tenantId" value="berbatik" />
			<entry key="tenantEnv" value="dev" />
			<entry key="namespace" value="role-person" />
		</service-properties>
	</service>
	<bean id="securityRepo" class="org.soluvas.security.ldap.LdapSecurityRepository">
		<argument ref="ldapPool" />
		<argument value="dc=dev,dc=berbatik,dc=com" />
		<argument>
			<bean factory-ref="ldapConfigSupplier" factory-method="get" />
		</argument>
		<argument ref="rolePersonAssoc" />
	</bean>
	<service ref="securityRepo" auto-export="interfaces">
		<service-properties>
			<entry key="clientId" value="berbatik" />
			<entry key="tenantId" value="berbatik" />
			<entry key="tenantEnv" value="dev" />
		</service-properties>
	</service>
	
	<bean id="shiroRealm" class="org.soluvas.web.login.SoluvasRealm" init-method="init">
		<argument ref="securityCatalogSupplier" />
		<argument ref="securityRepo" />
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager"
		destroy-method="destroy">
		<property name="realm" ref="shiroRealm" />
	</bean>

	<bean id="shiroFilterFactory" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<bean id="securityFilter" class="org.soluvas.web.login.DelegatingFilterFactory"
		init-method="register" activation="eager">
		<argument ref="blueprintBundleContext" />
		<argument value="berbatik_dev" />				<!-- Wicket application name -->
		<argument value="2" />							<!-- Priority -->
		<property name="filter">
			<bean factory-ref="shiroFilterFactory" factory-method="getObject" />
		</property>
	</bean>

</blueprint>
